{"version":3,"sources":["components/H-BurgerMenu.js","components/H-HorizontalMenu.js","components/Header.js","services/LocalStorage.js","components/M-CountryCard.js","images/earth.gif","components/M-F-NoResults.js","components/M-CountryList.js","elements/BackButton.js","components/M-CountryDetail.js","components/M-F-SearchArea.js","components/M-F-FilterContinent.js","components/M-F-FilterLanguage.js","components/M-Filters.js","images/noFavs.gif","components/M-NoFavorites.js","components/M-Favorites.js","images/map.gif","components/M-NoExist.js","components/Main.js","App.js","index.js"],"names":["BurgerMenu","useState","isClosed","setClosed","closeMenuHandler","className","isOpen","width","to","onClick","HorizontalMenu","Header","props","LocalStorage","get","key","defaultData","data","localStorage","getItem","JSON","parse","set","value","setItem","stringify","CountryCard","alpha2Code","src","flag","alt","name","nativeName","NoResults","userCountrySearch","Earth","CountryList","countries","length","country","map","index","isFavorite","favorites","find","favorite","id","favCountry","title","BackButton","handleFilterReset","CountryDetail","timeZone","timezones","time","currency","currencies","symbol","officialLanguages","languages","language","capital","population","latlng","alpha3Code","SearchArea","onSubmit","ev","preventDefault","htmlFor","type","placeholder","onChange","handleFilters","searchValue","target","toLowerCase","FilterContinent","continentValue","FilterLanguage","renderLanguages","languageValue","Filters","NoFavorites","noFav","Favorites","favoriteCountries","NoExist","Main","localCountries","localFavorites","setCountries","setFavorites","setUserCountrySearch","continentFilter","setContinentFilter","languageFilter","setLanguageFilter","useEffect","axios","then","res","clickedCard","undefined","newFavorites","filter","countryFav","renderFilters","includes","region","exact","path","filterData","render","routerProps","routerId","match","params","countryFound","component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1be5915d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//PACKAGES\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\nconst BurgerMenu = () => {\r\n  const [isClosed, setClosed] = useState();\r\n\r\n  const closeMenuHandler = () => {\r\n    if (isClosed === false) {\r\n      return setClosed(true);\r\n    } else {\r\n      setClosed(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"burgerMenu\">\r\n      <Menu isOpen={isClosed} width={280}>\r\n        <Link to=\"/\" className=\"menu__item\" onClick={closeMenuHandler}>\r\n          Home\r\n        </Link>\r\n        <Link to=\"/favorites\" className=\"menu__item\" onClick={closeMenuHandler}>\r\n          Favorites\r\n        </Link>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst HorizontalMenu = () => {\r\n  return (\r\n    <div className=\"hMenu\">\r\n      <Link to=\"/\">\r\n        <h1 className=\"hMenu__title\">World Atlas</h1>\r\n      </Link>\r\n\r\n      <nav>\r\n        <ul className=\"hMenu__ul\">\r\n          <Link to=\"/\">\r\n            <li className=\"hMenu__item\">Home</li>\r\n          </Link>\r\n          <Link to=\"/favorites\">\r\n            <li className=\"hMenu__item\">Favorites</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default HorizontalMenu;\r\n","//COMPONENTS\r\nimport BurgerMenu from \"./H-BurgerMenu\";\r\nimport HorizontalMenu from \"./H-HorizontalMenu\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <BurgerMenu />\r\n      <HorizontalMenu />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst LocalStorage = { get: get, set: set };\r\n\r\nexport default LocalStorage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CountryCard = (props) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`/countries/${props.alpha2Code}`}\r\n        className=\"countryList__card--linkWrap\"\r\n      >\r\n        <img\r\n          src={props.flag}\r\n          alt={`flag of ${props.name}`}\r\n          className=\"countryList__card--flag\"\r\n        />\r\n        <h2 className=\"countryList__card--name\">{props.name}</h2>\r\n        <p className=\"countryList__card--native\">{props.nativeName}</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nexport default CountryCard;\r\n","export default __webpack_public_path__ + \"static/media/earth.64d3435d.gif\";","//IMAGES\r\nimport Earth from \"../images/earth.gif\";\r\n\r\nconst NoResults = (props) => {\r\n  return (\r\n    <section className=\"noResults\">\r\n      <p className=\"noResults__text\">\r\n        There is no country or capital that fits your search{\" \"}\r\n        <span className=\"noResults__text--search\">\r\n          {props.userCountrySearch}\r\n        </span>{\" \"}\r\n      </p>\r\n      <p className=\"noResults__text\">Try again!</p>\r\n      <img\r\n        src={Earth}\r\n        alt=\"Gif of the globe spinning\"\r\n        className=\"noResults__img\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoResults;\r\n","//COMPONENT\r\nimport CountryCard from \"./M-CountryCard\";\r\nimport NoResults from \"./M-F-NoResults\";\r\n\r\nconst CountryList = (props) => {\r\n  //RENDER NO RESULTS\r\n  if (props.countries.length === 0) {\r\n    return <NoResults userCountrySearch={props.userCountrySearch} />;\r\n  }\r\n\r\n  //RENDER COUNTRIES\r\n  const country = props.countries.map((country, index) => {\r\n    const isFavorite = props.favorites.find(\r\n      (favorite) => favorite.alpha2Code === country.alpha2Code\r\n    );\r\n    return (\r\n      <li className=\"countryList__card\" key={index}>\r\n        <CountryCard\r\n          name={country.name}\r\n          flag={country.flag}\r\n          nativeName={country.nativeName}\r\n          alpha2Code={country.alpha2Code}\r\n        />{\" \"}\r\n        <button\r\n          id={index}\r\n          onClick={() => props.favCountry(country.alpha2Code)}\r\n          className=\"countryList__card--favorite\"\r\n          aria-label=\"favorite icon button\"\r\n        >\r\n          <i\r\n            className={\r\n              isFavorite\r\n                ? \"fas fa-lg fa-star countryList__card--favorite-icon\"\r\n                : \"far fa-lg fa-star countryList__card--favorite-icon\"\r\n            }\r\n            title=\"Add to favorites\"\r\n          ></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <section className=\"countries\">\r\n      <ul className=\"countryList\">{country}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst BackButton = (props) => {\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"backButton\" onClick={props.handleFilterReset}>\r\n        <i className=\"fas fa-lg fa-arrow-left backButton__arrow\" />\r\n        <small className=\"backButton__text\">Back</small>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nexport default BackButton;\r\n","//COMPONENTS\r\nimport BackButton from \"../elements/BackButton\";\r\n\r\nconst CountryDetail = (props) => {\r\n  const timeZone = props.country.timezones.map((time, index) => {\r\n    return <p key={index}>{time}</p>;\r\n  });\r\n\r\n  const currency = props.country.currencies.map((currency, index) => {\r\n    return (\r\n      <>\r\n        <p key={index}>\r\n          {currency.name} {currency.symbol}\r\n        </p>\r\n      </>\r\n    );\r\n  });\r\n\r\n  const officialLanguages = props.country.languages.map((language, index) => {\r\n    return (\r\n      <p key={index}>\r\n        {language.name} / {language.nativeName}\r\n      </p>\r\n    );\r\n  });\r\n  return (\r\n    <section className=\"countryDetail\">\r\n      <BackButton />\r\n      <article className=\"cDetail\" key={props.country.alpha3Code}>\r\n        <img\r\n          src={props.country.flag}\r\n          alt={`Flag of ${props.country.name}`}\r\n          className=\"cDetail__flag\"\r\n        />\r\n        <h2 className=\"cDetail__title\">\r\n          Welcome to{\" \"}\r\n          <span className=\"cDetail__title--country\">{props.country.name}</span>\r\n        </h2>\r\n        <div className=\"cDetail__information\">\r\n          <h3 className=\"cDetail__information--capital\">\r\n            {props.country.capital}\r\n          </h3>\r\n          <h4 className=\"cDetail__information--timezone\">Timezones</h4>\r\n          {timeZone}\r\n          <h4 className=\"cDetail__information--currency\">Actual currency</h4>\r\n          {currency}\r\n        </div>\r\n        <div className=\"cDetail__socialInformation\">\r\n          <h4 className=\"cDetail__socialInformation--population\">Population</h4>\r\n          <p key={props.country.alpha2Code}>\r\n            {props.country.population} people\r\n          </p>\r\n          <h4 className=\"cDetail__socialInformation--language\">\r\n            Official languages\r\n          </h4>\r\n          {officialLanguages}\r\n        </div>\r\n        <iframe\r\n          className=\"cDetail__map\"\r\n          title=\"Map representation\"\r\n          src={`https://maps.google.com/maps?q=${props.country.latlng[0]},${props.country.latlng[1]}&t=&z=4&ie=UTF8&iwloc=&output=embed`}\r\n        ></iframe>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\nexport default CountryDetail;\r\n","const SearchArea = (props) => {\r\n  //SEARCH BOX HANDLER TAKES USER SEARCH\r\n  const handleSearchBox = (ev) => {\r\n    props.handleFilters({\r\n      searchValue: ev.target.value.toLowerCase(),\r\n      key: \"country\",\r\n    });\r\n  };\r\n\r\n  //PREVENT DEFAULT WHEN USER TAP \"ENTER\"\r\n  const preventDefault = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchArea__form\" onSubmit={preventDefault}>\r\n      <label htmlFor=\"searchBar\" className=\"searchArea__form--search\">\r\n        <input\r\n          id=\"search\"\r\n          type=\"search\"\r\n          placeholder=\"Search a country or capital\"\r\n          className=\"searchArea__form--search-input\"\r\n          onChange={handleSearchBox}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchArea;\r\n","const FilterContinent = (props) => {\r\n  const handleContinent = (ev) => {\r\n    props.handleFilters({ continentValue: ev.target.value, key: \"continent\" });\r\n  };\r\n\r\n  return (\r\n    <label className=\"filters__label\" htmlFor=\"continent\">\r\n      Filter by Continent\r\n      <select\r\n        id=\"continent\"\r\n        name=\"continent\"\r\n        className=\"filters__select\"\r\n        onChange={handleContinent}\r\n      >\r\n        <option value=\"All\">All</option>\r\n        <option value=\"Africa\">Africa</option>\r\n        <option value=\"Americas\">Americas</option>\r\n        <option value=\"Asia\">Asia</option>\r\n        <option value=\"Europe\">Europe</option>\r\n        <option value=\"Oceania\">Oceania</option>\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterContinent;\r\n","const FilterLanguage = (props) => {\r\n  const languages = [\r\n    \"All\",\r\n    \"Chinese\",\r\n    \"English\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Hindi\",\r\n    \"Italian\",\r\n    \"Spanish\",\r\n    \"Portuguese\",\r\n    \"Russian\",\r\n  ];\r\n\r\n  const handleLanguage = (ev) => {\r\n    props.handleFilters({ languageValue: ev.target.value, key: \"language\" });\r\n  };\r\n\r\n  const renderLanguages = languages.map((language, index) => {\r\n    return (\r\n      <option value={language} key={index}>\r\n        {language}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <label className=\"filters__label\" htmlFor=\"language\">\r\n      Filter by Language\r\n      <select\r\n        id=\"language\"\r\n        name=\"language\"\r\n        className=\"filters__select\"\r\n        onChange={handleLanguage}\r\n      >\r\n        {renderLanguages}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterLanguage;\r\n","//COMPONENTS\r\nimport SearchArea from \"./M-F-SearchArea\";\r\nimport FilterContinent from \"./M-F-FilterContinent\";\r\nimport FilterLanguage from \"./M-F-FilterLanguage\";\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <form className=\"filters\">\r\n      <SearchArea handleFilters={props.handleFilters} />\r\n      <div className=\"filters__dropdowns\">\r\n        <FilterContinent handleFilters={props.handleFilters} />\r\n        <FilterLanguage handleFilters={props.handleFilters} />\r\n        <button\r\n          className=\"filters__reset\"\r\n          onClick={props.handleFilterReset}\r\n          title=\"Reset filters\"\r\n        >\r\n          <i className=\"fas fa-redo-alt filters__reset-icon\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/noFavs.85c812bf.gif\";","//COMPONENT\r\nimport BackButton from \"../elements/BackButton\";\r\n\r\n//IMAGES\r\nimport noFav from \"../images/noFavs.gif\";\r\n\r\nconst NoFavorites = (props) => {\r\n  return (\r\n    <section className=\"noFav\">\r\n      <h2 className=\"noFav__title\">Favorite countries</h2>\r\n      <img\r\n        src={noFav}\r\n        alt=\"Gif of a localization pin spinning\"\r\n        className=\"noFav__img\"\r\n      />\r\n      <p className=\"noFav__paragraph\">\r\n        You have no favorite countries yet...go back and add some\r\n      </p>\r\n      <BackButton handleFilterReset={props.handleFilterReset} />\r\n    </section>\r\n  );\r\n};\r\nexport default NoFavorites;\r\n","//COMPONENTS\r\nimport CountryCard from \"./M-CountryCard\";\r\nimport NoFavorites from \"./M-NoFavorites\";\r\n\r\nconst Favorites = (props) => {\r\n  //RENDER NO FAVORITES COMPONENT\r\n  if (props.favorites.length === 0) {\r\n    return <NoFavorites handleFilterReset={props.handleFilterReset} />;\r\n  }\r\n\r\n  const favoriteCountries = props.favorites.map((favorite, index) => {\r\n    return (\r\n      <li className=\"countryList__card\" key={index}>\r\n        <CountryCard\r\n          name={favorite.name}\r\n          flag={favorite.flag}\r\n          nativeName={favorite.nativeName}\r\n          alpha2Code={favorite.alpha2Code}\r\n        />\r\n        <button\r\n          id={index}\r\n          onClick={() => props.favCountry(favorite.alpha2Code)}\r\n          className=\"countryList__card--favorite\"\r\n          aria-label=\"favorite icon button\"\r\n        >\r\n          <i\r\n            className=\"fas fa-lg fa-trash-alt countryList__card--favorite-icon\"\r\n            title=\"Delete from favorites\"\r\n          ></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"favorites\">\r\n      <h2 className=\"favorites__title\">Favorite countries</h2>\r\n      <ul className=\"favorites__list\">{favoriteCountries}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","export default __webpack_public_path__ + \"static/media/map.02e225db.gif\";","//COMPONENT\r\nimport BackButton from \"../elements/BackButton\";\r\n\r\n//IMAGES\r\nimport map from \"../images/map.gif\";\r\n\r\nconst NoExist = () => {\r\n  return (\r\n    <section className=\"noExist\">\r\n      <BackButton />\r\n      <p className=\"noExist__text\">\r\n        Ops, you got lost. This page does not exist.\r\n      </p>\r\n      <img src={map} alt=\"Unfolding map gif\" className=\"noExist__img\" />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NoExist;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n//SERVICES\r\nimport localStorage from \"../services/LocalStorage\";\r\n\r\n//COMPONENTS\r\nimport CountryList from \"./M-CountryList\";\r\nimport CountryDetail from \"./M-CountryDetail\";\r\nimport Filters from \"./M-Filters\";\r\nimport Favorites from \"./M-Favorites\";\r\nimport NoExist from \"./M-NoExist\";\r\n\r\nconst Main = () => {\r\n  //LOCALSTORAGE - GET\r\n  const localCountries = localStorage.get(\"Countries\", []);\r\n  const localFavorites = localStorage.get(\"Favorites\", []);\r\n\r\n  //STATES\r\n  //MAIN\r\n  const [countries, setCountries] = useState(localCountries);\r\n  const [favorites, setFavorites] = useState(localFavorites);\r\n\r\n  //FILTERS\r\n  const [userCountrySearch, setUserCountrySearch] = useState(\"\");\r\n  const [continentFilter, setContinentFilter] = useState(\"All\");\r\n  const [languageFilter, setLanguageFilter] = useState(\"All\");\r\n\r\n  //API\r\n  useEffect(() => {\r\n    const apiURL = \"https://restcountries.eu/rest/v2/all\";\r\n    if (localCountries.length === 0) {\r\n      axios.get(apiURL).then((res) => {\r\n        setCountries(res.data);\r\n      });\r\n    }\r\n  }, [localCountries]);\r\n\r\n  //LOCALSTORAGE - SET\r\n  useEffect(() => {\r\n    localStorage.set(\"Countries\", countries);\r\n    localStorage.set(\"Favorites\", favorites);\r\n  });\r\n\r\n  if (!countries) return null;\r\n\r\n  //FAVORITES - SET\r\n\r\n  const favCountry = (clickedCard) => {\r\n    const favoritedCountry = favorites.find((country) => {\r\n      return country.alpha2Code === clickedCard;\r\n    });\r\n    if (favoritedCountry === undefined) {\r\n      const countryFav = countries.find((country) => {\r\n        return country.alpha2Code === clickedCard;\r\n      });\r\n      setFavorites([...favorites, countryFav]);\r\n\r\n      return;\r\n    }\r\n    const newFavorites = favorites.filter(\r\n      (country) => country.alpha2Code !== clickedCard\r\n    );\r\n    setFavorites(newFavorites);\r\n  };\r\n\r\n  //HANDLE FILTERS\r\n  const handleFilters = (filterData) => {\r\n    if (filterData.key === \"country\") {\r\n      setUserCountrySearch(filterData.searchValue);\r\n    }\r\n    if (filterData.key === \"continent\") {\r\n      setContinentFilter(filterData.continentValue);\r\n    }\r\n    if (filterData.key === \"language\") {\r\n      setLanguageFilter(filterData.languageValue);\r\n    }\r\n  };\r\n\r\n  //HANDLE  FILTER RESET\r\n\r\n  const handleFilterReset = () => {\r\n    setUserCountrySearch(\"\");\r\n    setContinentFilter(\"All\");\r\n    setLanguageFilter(\"All\");\r\n  };\r\n\r\n  //RENDER FILTERS\r\n\r\n  const renderFilters = countries\r\n    .filter((country) => {\r\n      return (\r\n        country.name.toLowerCase().includes(userCountrySearch) ||\r\n        country.capital.toLowerCase().includes(userCountrySearch)\r\n      );\r\n    })\r\n    .filter((country) => {\r\n      if (continentFilter === \"All\") {\r\n        return true;\r\n      } else {\r\n        return country.region === continentFilter;\r\n      }\r\n    })\r\n    .filter((country) => {\r\n      if (languageFilter === \"All\") {\r\n        return true;\r\n      } else {\r\n        const language = country.languages.map((language) => {\r\n          return language.name;\r\n        });\r\n        return language.includes(languageFilter);\r\n      }\r\n    });\r\n\r\n  //RENDER DINAMIC ROUTE FOR COUNTRY DETAIL\r\n  const renderCountryDetail = (routerProps) => {\r\n    const routerId = routerProps.match.params.id;\r\n    const countryFound = countries.find(\r\n      (country) => country.alpha2Code === routerId\r\n    );\r\n    if (countryFound) {\r\n      return <CountryDetail country={countryFound} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/countries\"]}>\r\n          <Filters\r\n            handleFilters={handleFilters}\r\n            handleFilterReset={handleFilterReset}\r\n          />\r\n          <CountryList\r\n            countries={renderFilters}\r\n            favCountry={favCountry}\r\n            favorites={favorites}\r\n            userCountrySearch={userCountrySearch}\r\n            handleFilterReset={handleFilterReset}\r\n          />\r\n        </Route>\r\n        <Route path=\"/countries/:id\" render={renderCountryDetail} />\r\n        <Route path=\"/favorites\">\r\n          <Favorites\r\n            favorites={favorites}\r\n            countries={renderFilters}\r\n            favCountry={favCountry}\r\n            handleFilterReset={handleFilterReset}\r\n          />\r\n        </Route>\r\n        <Route component={NoExist} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","//COMPONENTS\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\n//STYLES\nimport \"./stylesheets/App.scss\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\n//COMPONENTS\nimport App from \"./App\";\n\n//STYLES\nimport \"./stylesheets/App.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}